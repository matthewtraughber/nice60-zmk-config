#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

// Layers - https://zmk.dev/docs/behaviors/layers
#define L_DEFAULT	0
#define L_DRAFT    	1
#define L_DISABLE	2

// Combos - https://zmk.dev/docs/features/combos
#define C_DEFAULT_TIMEOUT			50
#define C_DEFAULT_REQ_PRIOR_IDLE	(-1)
#define C_DEFAULT_RELEASE			/delete-property/ slow-release
#define C_SLOW_RELEASE				slow-release

#define COMBO(NAME, LAYERS, KEYS, BINDINGS, TIMEOUT, IDLE, RELEASE) \
	combo_##NAME { \
		layers = <LAYERS>; \
		key-positions = <KEYS>; \
		bindings = <BINDINGS>; \
		timeout-ms = <TIMEOUT>; \
		require-prior-idle-ms = <IDLE>; \
		RELEASE; \
	};

/ {
    combos {
        compatible = "zmk,combos";

		// IDLE does not apply when in disable_layer
		COMBO(disable, L_DEFAULT L_DISABLE, 0 13 53 60, &tog L_DISABLE, C_DEFAULT_TIMEOUT, 1000, C_DEFAULT_RELEASE)
    };

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ----------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |     BKSP     |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |     "|"     |
// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |       ENTER      |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |        SHIFT         |
// |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  CTL | MO(L_DRAFT) |
// ----------------------------------------------------------------------------------------------
			bindings = <
	&gresc  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL  &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSLH
	&kp CLCK  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT           &kp RET
	&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH           &kp RSHFT
	&kp LCTRL &kp LGUI &kp LALT             &kp SPACE               &kp RALT  &kp RGUI  &kp RCTRL   &mo L_DRAFT
			>;
		};

		draft_layer {
// -----------------------------------------------------------------------------------------
// | BT CLR | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 | F13 |
// | BT 0  |     |     |     |     |     |     |     |     |     |     |     |     |       |
// | BT 1   |     |     |     |     |     |     |     |     |     |     |     |            |
// | BT 2    |     |     |     |     |     |     |     |     |     |     |                 |
// | BT 3 |    |    |                               | BOOTLOADER | RESET | TOG OUT |       |
// -----------------------------------------------------------------------------------------
			bindings = <
	&bt BT_CLR		&kp F1  &kp F2  &kp F3  &kp F4  &kp F5	&kp F6	&kp F7	&kp F8	&kp F9	&kp F10	&kp F11 &kp F12	&kp F13
	&bt BT_SEL 0  	&trans  &trans  &trans  &trans  &trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans	 &trans 
	&bt BT_SEL 1   	&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans			 &trans
	&bt BT_SEL 2    &trans  &trans  &trans  &trans	&trans	&trans  &trans  &trans  &trans  &trans                   &trans
	&bt BT_SEL 3  	&trans  &trans                  &trans        			&bootloader     &sys_reset	&out OUT_TOG &trans
			>;
		};

		disable_layer {
// ------------------------------------------------------------------------------------------
// |     |     |     |     |     |     |     |     |     |     |     |     |     |          |
// |      |     |     |     |     |     |     |     |     |     |     |     |     |         |
// |       |     |     |     |     |     |     |     |     |     |     |     |              |
// |         |     |     |     |     |     |     |     |     |     |     |                  |
// |       |       |       |                               |       |       |      |         |
// ------------------------------------------------------------------------------------------
			bindings = <
	&none	&none	&none	&none	&none	&none	&none	&none	&none	&none	&none	&none	&none	&none
	&none	&none   &none   &none  	&none  	&none	&none 	&none  	&none   &none   &none   &none  	&none   &none
	&none   &none  	&none  	&none 	&none 	&none 	&none 	&none 	&none   &none   &none   &none        	&none
	&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none                   &none
	&none 	&none   &none                           &none                   		&none	&none	&none   &none
			>;
		};
	};
};